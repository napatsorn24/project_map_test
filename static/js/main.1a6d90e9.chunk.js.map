{"version":3,"sources":["components/Login.js","components/Register.js","components/Dashboard.js","components/index.js","components/Map.js","components/layouts/Navbar.js","App.js","index.js"],"names":["Login","setAuth","useState","email","password","inputs","setInputs","onChange","e","target","name","value","onSubmitForm","a","preventDefault","body","fetch","method","headers","JSON","stringify","response","json","parseRes","jwtToken","localStorage","setItem","toast","success","error","console","message","className","onSubmit","type","to","Register","placeholder","Dashboard","setName","getProfile","jwt_token","token","res","parseData","user_name","logout","removeItem","err","useEffect","onClick","Index","MyMap","MapContainer","style","height","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Navbar","mode","theme","Item","key","icon","UserAddOutlined","marginLeft","LoginOutlined","configure","App","checkAuthenticated","setIsAuthenticated","isAuthenticated","boolean","basename","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a6d90e9.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n// import { Form, Input} from 'antd';\n\nconst Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { email, password };\n      const response = await fetch(\n        \"http://tramdev.ino.nectec.or.th:5001/authentication/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Logged in Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Login</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n\n        {/* <Form.Item\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={e => onChange(e)}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item> */}\n\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/register\">register</Link>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Register = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  });\n\n  const { email, password, name } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { email, password, name };\n      const response = await fetch(\n        \"http://tramdev.ino.nectec.or.th:5001/authentication/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Register Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center\">Register</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"email\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"name\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-success btn-block\">Submit</button>\n      </form>\n      <Link to=\"/login\">login</Link>\n      <div><Link to=\"/index\">bowTest</Link></div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst Dashboard = ({ setAuth }) => {\n  const [name, setName] = useState(\"\");\n\n  const getProfile = async () => {\n    try {\n      const res = await fetch(\"http://tramdev.ino.nectec.or.th:5001/dashboard/\", {\n        method: \"POST\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseData = await res.json();\n      setName(parseData.user_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = async e => {\n    e.preventDefault();\n    try {\n      localStorage.removeItem(\"token\");\n      setAuth(false);\n      toast.success(\"Logout successfully\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"mt-5\">Dashboard</h1>\n      <h2>Welcome {name}</h2>\n      <button onClick={e => logout(e)} className=\"btn btn-primary\">\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react'\n\n\n\nconst Index = () => {\n    return (     \n      <div>\n         <h1>Home Page1 หน้าเเรกสุดไม่ต้อง login</h1>\n     </div>\n  \n        \n    )\n}\nexport default Index;","import React from 'react'\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { MapContainer, TileLayer} from 'react-leaflet'\r\n\r\nconst MyMap = () => {\r\n    const position = [13, 100]\r\n    return (\r\n        <div>\r\n           {/* <h1>55555555</h1> */}\r\n           <MapContainer\r\n           style={{height:'95vh'}} center={position} zoom={6} scrollWheelZoom={true}>\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    />\r\n  \r\n  </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMap\r\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n// import { Route } from \"react-router-dom\";\nimport { Menu } from 'antd';\nimport { LoginOutlined,UserAddOutlined} from '@ant-design/icons';\n// import Login from \"../Login\";\n\n// import Bowtest from \"../../components/Bowtest\";\n\n// light | dark\n\nconst Navbar = () => {\n    return (     \n      <Menu mode=\"horizontal\"   theme=\"dark\">\n\n      <Menu.Item key=\"alipay\">\n          <Link to=\"/\">Home test</Link>\n      </Menu.Item>\n      <Menu.Item key=\"app2\"  icon={<UserAddOutlined/>}>\n          <Link to=\"/map\">map</Link> \n      </Menu.Item>\n      <Menu.Item key=\"app3\"  icon={<UserAddOutlined/>}>\n          <Link to=\"/dashboard\">Dashboard</Link> \n      </Menu.Item>\n      <Menu.Item key=\"mail\" style={{ marginLeft: 'auto' }}  icon={<LoginOutlined/>}>\n          <Link to=\"/login\">login</Link>\n      </Menu.Item>\n\n      <Menu.Item key=\"app\"  icon={<UserAddOutlined/>}>\n          <Link to=\"/register\">register</Link> \n      </Menu.Item>\n   \n    \n    </Menu>\n        \n    )\n}\nexport default Navbar","import React, { Fragment, useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\nimport Index from \"./components\";\nimport MyMap from \"./components/Map\";\n// Layout\nimport Navbar from \"./components/layouts/Navbar\";\nimport 'antd/dist/antd.css';\n\n\ntoast.configure();\n\nfunction App() {\n  const checkAuthenticated = async () => {\n    try {\n      const res = await fetch(\"http://tramdev.ino.nectec.or.th:5001/authentication/verify\", {\n        method: \"POST\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseRes = await res.json();\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return (\n    <Fragment>\n\n      <Router basename={'/project_map_test'} >\n      <Navbar/>\n        <div className=\"container\">\n          <Switch>\n            <Route\n             \n              exact\n              path=\"/login\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Login {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Register {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            \n            <Route\n            \n            //  BrowserRouter basename=\"http://203.185.67.44:3002/register\"\n              exact\n              path=\"/dashboard\"\n              render={props =>\n                isAuthenticated ? (\n                  <Dashboard {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                  \n                )\n              }\n            /> \n            <Route\n              exact\n              path=\"/map\"\n              render={props =>\n                isAuthenticated ? (\n                  <MyMap {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                  \n                )\n              }\n            /> \n             {/* <MyMap path=\"/map\" to=\"/map\" /> */}\n\n            <Index path=\"/\" to=\"/index\" />\n\n            {/* <Login path=\"/login\" to=\"/login\" /> */}\n            {/* <Route path=\"/\" element={<Index />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/login\" element={<Login />} />\n        */}\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\n// import \"./components/styles.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n   document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}